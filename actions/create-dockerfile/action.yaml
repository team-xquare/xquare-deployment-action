name: 'Create Dockerfile'

description: 'Create Dockerfile'

inputs:
  service_type:
    description: 'Type of service'
    required: true
  service_name:
    description: 'Name of service'
    required: true
  environment:
    description: 'Environment classification for servers (prod/stag)'
    required: true
  base_url:
    description: 'Base url of code'
    required: true
  yarn_docker_build:
    description: 'Boolean value indicating whether to use the "yarn docker build" command instead of the "docker build" command'
    required: true
  service_port:
    description: 'Port of service'
    required: true
  build_path:
    description: 'build_path when your project is configured multi-module'
    default: '.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Check if Dockerfile exists and yarn docker build is false
      id: check
      shell: bash
      run: |
        file_path="${{ inputs.base_url }}/Dockerfile"
        echo $file_path
        if [ -e $file_path ] && [ "${{ inputs.yarn_docker_build }}" == "false" ]; then
          echo "Dockerfile이 존재하고 yarn docker build가 false입니다."
          echo "dockerfile_and_yarn_build_false=true" >> $GITHUB_OUTPUT
        else
          echo "Dockerfile이 존재하지 않거나 yarn docker build가 true입니다."
          echo "dockerfile_and_yarn_build_false=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Dockerfile and Download if conditions are met
      if: steps.check.outputs.dockerfile_and_yarn_build_false == 'false'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ env.XQUARE_ACTION_GHP_TOKEN }}
        repository: team-xquare/xquare-dockerfile
        event-type: create_dockerfile
        client-payload: |
          {
            "service_name" : "${{ inputs.service_name }}",
            "service_type" : "${{ inputs.service_type }}",
            "environment" : "${{ inputs.environment }}",
            "build_path" : "${{ inputs.build_path }}",
            "service_port" : "${{ env.port }}"
          }

    - name: Download Dockerfile
      if: steps.check.outputs.dockerfile_and_yarn_build_false == 'false'
      id: download
      shell: bash
      run: |
        echo "Waiting for Dockerfile creating.."
        sleep 25
        dockerfile_dir="${{ inputs.environment }}/${{ inputs.service_name }}-${{ inputs.service_type }}"
        curl -O -L "https://raw.githubusercontent.com/team-xquare/xquare-dockerfile/main/${dockerfile_dir}/Dockerfile"
