name: 'Xquare deployment'
author: 'Xquare'
branding:
  icon: 'Xquare'
  color: 'Purple'

description: 'Tasks to deploy to xquare server'
inputs:
  environment:
    description: 'Environment classification for servers (prod/stag)' 
    required: true
  base_url:
    description: 'Base url of code'
    default: '.'
  config_file_path:
    description: 'Path of Xquare Config file'
    default: '.xquare/config.yaml'
  access_key:
    description: 'Access-key for authenticate to run action'
    required: true
  github_token:
    description: 'Github personal access token to repository dispatch. It should has a "repo" scope. Detail on [Github Document](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens)' 
    required: true
  yarn_docker_build:
    description: 'Boolean value indicating whether to use the "yarn docker build" command instead of the "docker build" command'
    default: false
  yarn_workspace:
    description: 'Workspace name to build docker image'
    required: false
  buildargs:
    description: 'Use buildargs when you want to pass a list of environment variables to docker as build-args'
    required: false
  build_path:
    description: 'build_path when your project is configured multi-module'
    default: '.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Install yq
      uses: mikefarah/yq@v4

    - name: Read config values
      id: config-value
      uses: team-xquare/xquare-deployment-action/actions/read-config@master
      with:
        config_file_path: ${{ inputs.config_file_path }}
        environment: ${{ inputs.environment }}

    - name: Authenticate and get role-arn
      id: get-role-arn
      uses: team-xquare/xquare-deployment-action/actions/authenticate-and-get-arn@master
      with:
        access_key: ${{ inputs.access_key }}
        project_name: ${{ env.name }}
        project_type: ${{ env.type }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.xquare_role_arn }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get ECR Repository name
      id: repository
      shell: bash
      run: echo "repository_name=${{ env.name }}-${{ env.type }}-${{ inputs.environment }}" >> $GITHUB_OUTPUT

    - name: Get Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids:
          xquare/action
        parse-json-secrets: true
        
    - name: Create ecr if not exists
      uses: team-xquare/xquare-deployment-action/actions/create-ecr@master
      with:
        repository_name: ${{ steps.repository.outputs.repository_name }}
        service_name: ${{ env.name }}
        service_type: ${{ env.type }}
        environment: ${{ inputs.environment }}
        github_token: ${{ env.XQUARE_ACTION_GHP_TOKEN }}

    - name: Create domain if not exists
      if: ${{ env.domain }}
      uses: team-xquare/xquare-deployment-action/actions/create-domain@master
      with:
        domain: ${{ env.domain }}
        github_token: ${{ env.XQUARE_ACTION_GHP_TOKEN }}

    - name: Create dockerfile if not exists
      uses: team-xquare/xquare-deployment-action/actions/create-dockerfile@master
      with:
        service_type: ${{ env.type }}
        service_name: ${{ env.name }}
        environment: ${{ inputs.environment }}
        base_url: ${{ inputs.base_url }}
        yarn_docker_build: ${{ inputs.yarn_docker_build }}
        build_path: ${{ inputs.build_path }}
        service_port: ${{ env.port }}

    - name: Docker push
      id: docker
      uses: team-xquare/xquare-deployment-action/actions/docker-push@master
      with:
        registry_name: ${{ steps.ecr.outputs.registry }}
        repository_name: ${{ steps.repository.outputs.repository_name }}
        environment: ${{ inputs.environment }}
        base_url: ${{ inputs.base_url }}
        yarn_docker_build: ${{ inputs.yarn_docker_build }}
        yarn_workspace: ${{ inputs.yarn_workspace }}
        buildargs: ${{ inputs.buildargs }}
         
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ env.XQUARE_ACTION_GHP_TOKEN }}
        repository: team-xquare/xquare-gitops-repo
        event-type: update_config
        client-payload: |
          {
            "ref" : "${{ github.ref }}", 
            "image_tag" : "${{ env.version_tag }}",
            "service_name" : "${{ env.name }}",
            "service_prefix" : "${{ env.prefix }}",
            "service_domain" : "${{ env.domain }}",
            "service_type" : "${{ env.type }}",
            "service_port" : "${{ env.port }}",
            "environment" : "${{ inputs.environment }}"
          }
